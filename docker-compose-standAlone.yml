# Docker Compose Configuration for Selenium Standalone Chrome, Firefox and edge
version: '3.8'

services:

   # Selenium Standalone Chrome
   chrome:
      image: selenium/standalone-chrome:latest
      hostname: chrome
      privileged: true
      shm_size: 2g
      ports:
      - 4444:4444
      restart: always
      
   # Selenium Standalone Firefox   
   firefox:
      image: selenium/standalone-firefox:latest
      hostname: firefox
      privileged: true
      shm_size: 2g
      ports:
      - 4441:4444
      restart: always
    
   # Selenium Standalone edge -- No need also slow too much
   edge:
      image: selenium/standalone-edge:latest
      hostname: edge
      privileged: true
      shm_size: 2g
      ports:
      - 4442:4444
      restart: always
   


# ------------------
# Orphaned comments:
# To run the docker-compose-standAlone.yml file, use the following command:
# docker-compose -f docker-compose-standAlone.yml up -d

# Access the Selenium StandAlone browser UI at http://localhost:4444/ui
# Start services with the YAML file: docker-compose up -d
# Stop services: docker-compose down

# Check Docker version: docker -v
# List installed Docker images: docker images
# Pull the latest Selenium/standalone-chrome image: docker pull selenium/standalone-chrome:latest
# Check running Docker containers: docker ps
# Port 4444 is used for both browsers

# ------------------
# Without using a YAML file:
# Run Selenium standalone Chrome container:
# docker run -d -p 4444:4444 selenium/standalone-chrome

# Run Selenium standalone Firefox container:
# docker run -d -p 4444:4444 selenium/standalone-firefox

# Note: No need to expose VNC port explicitly for Chrome:
# docker run -d -p 4444:4444 -p 7900:7900 selenium/standalone-chrome

# To run tests with Firefox using Maven:
# mvn test -Dbrowser=firefox
